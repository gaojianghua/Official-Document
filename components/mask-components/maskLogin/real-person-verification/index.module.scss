.real {
  width: 300px;
  height: 280px;
  position: relative;

  .verImg {
    height: 100%;
    background-color: #000;
    overflow: hidden;
    display: flex;
    width: 100%;
    position: relative;

    @function randomNum($max, $min: 0, $u: 1) {
      @return ($min + random($max)) * $u;
    }

    @function randomColor() {
      @return rgb(randomNum(255), randomNum(255), randomNum(255));
    }

    @function shadowSet($maxWidth, $maxHeight, $count) {
      $shadow: 0 0 0 0 randomColor();

      @for $i from 0 through $count {
        $x: #{random(10000) / 10000 * $maxWidth};
        $y: #{random(10000) / 10000 * $maxHeight};


        $shadow: $shadow, #{$x} #{$y} 0 #{random(5)}px randomColor();
      }

      @return $shadow;
    }

    .gContainer {
      margin: auto;
      perspective: 5px;
      perspective-origin: 50% 50%;
      position: relative;
      animation: hueRotate 20s infinite linear;
    }

    .gGroup {
      position: absolute;
      width: 100vw;
      height: 100vh;
      left: -50vw;
      top: -50vh;
      transform-style: preserve-3d;
      animation: move 8s infinite linear;
    }

    .gGroup:nth-child(2) {
      animation: move 8s infinite linear;
      animation-delay: -4s;
    }

    .item {
      position: absolute;
      width: 100%;
      height: 100%;
      background: linear-gradient(#05040a, #03010e);
      background-size: cover;
      opacity: 1;
      animation: fade 8s infinite linear;
    }

    .item::after {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      width: 1px;
      height: 1px;
      border-radius: 50%;
      box-shadow: shadowSet(100vw, 100vh, 500);
    }

    .gGroup:nth-child(2) .item {
      animation-delay: -4s;
    }

    .itemRight {
      transform: rotateY(90deg) translateZ(500px);
    }

    .itemLeft {
      transform: rotateY(-90deg) translateZ(500px);
    }

    .itemTop {
      transform: rotateX(90deg) translateZ(500px);
    }

    .itemBottom {
      transform: rotateX(-90deg) translateZ(500px);
    }

    .itemMiddle {
      transform: rotateX(180deg) translateZ(1000px);
    }

    @keyframes move {
      0% {
        transform: translateZ(-200px) rotate(0deg);
      }
      100% {
        transform: translateZ(150px) rotate(0deg);
      }
    }

    @keyframes fade {
      0% {
        opacity: .2;
      }
      25%,
      60% {
        opacity: 1;
      }
      100% {
        opacity: .2;
      }
    }

    @keyframes hueRotate {
      0% {
        filter: hue-rotate(0);
      }
      100% {
        filter: hue-rotate(360deg);
      }
    }

    .verCode {
      position: absolute;
      top: 0;
      left: 0;
      padding: 12px;
      height: 200px;

      .verText {
        font-size: 70px;
        font-weight: 600;
        height: 70px;
        color: transparent;
        background: -webkit-linear-gradient(30deg, #32c5ff 25%, #b620e0 50%, #f7b500 75%, #20e050 100%);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-size: auto;
        animation: gradientText 3s infinite linear;
        -webkit-animation: gradientText 3s infinite linear;

        @keyframes gradientText {
          0% {
            background-position: 280px;
          }
          50% {
            background-position: 0;
          }
          100% {
            background-position: 280px;
          }
        }
      }
    }
    .close{
      position: absolute;
      top: 5px;
      right: 5px;
      z-index: 10;
      color: #999;
      font-size: 22px;
    }
    .close:hover{
      color: #FFFFFF;
    }
  }
  .versform{
    position: absolute;
    left: 0;
    bottom: 38px;
  }
}
